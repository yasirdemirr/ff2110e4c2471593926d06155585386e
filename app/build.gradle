plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.myd.ff2110e4c2471593926d06155585386e"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:${ktxCoreVersion}"
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "com.google.android.material:material:${materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    //dagger
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"

    //okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"


    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:${archLifecycleVersion}"
    kapt "androidx.lifecycle:lifecycle-compiler:${archLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${archLifecycleVersion}"

    //rxjava, android
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutineVersion}"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'


    //pagination
    implementation "androidx.paging:paging-runtime-ktx:${paging_version}"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${nav_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${nav_version}"

    //glide
    implementation "com.github.bumptech.glide:glide:${glideVersion}"

    //room
    implementation "androidx.room:room-runtime:${roomVersion}"
    implementation "androidx.room:room-ktx:${roomVersion}"
    kapt "androidx.room:room-compiler:${roomVersion}"

    // Test

    testImplementation "io.mockk:mockk:${mockK_version}"
    testImplementation "androidx.arch.core:core-testing:${arc_core_version}"
    androidTestImplementation "junit:junit:${junit_version}"

    debugImplementation "androidx.test:runner:${run_rules_version}"
    debugImplementation "androidx.test:rules:${run_rules_version}"
    testImplementation "org.robolectric:robolectric:${robo_version}"
    testImplementation "junit:junit:${junit_version}"
    androidTestImplementation "androidx.test.ext:junit:${extjUnitVersion}"
}